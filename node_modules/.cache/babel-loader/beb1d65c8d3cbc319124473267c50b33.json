{"ast":null,"code":"import { authenticate, logout, register, resetPassword, verifyPassword, categories, categoryProducts, singleProduct, products, relatedProducts, addCart, getCart, getCartCount, updateCart, removeCart, getWishList, addWishList, productSpecification, searchProduct, hotDeal, buyNow, banner, getProfile, updateProfile, addAddress, deleteAddresss, getAddress, getOrder, getOrderDetail, addReview, deleteReview, myReview, getReview, checkOut, payNow, faq } from \"../ActionType\";\nconst initialState = {}; //User\n\nexport const User = function () {\n  let state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialState;\n  let actions = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (actions.type) {\n    case authenticate.login.success:\n      return {\n        status: true,\n        payload: actions.data\n      };\n\n    case authenticate.login.error:\n      return {\n        status: false,\n        payload: actions.data\n      };\n\n    default:\n      return state;\n  }\n}; //Reset Password\n\n_c = User;\nexport const resetPasswords = function () {\n  let state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialState;\n  let actions = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (actions.type) {\n    case resetPassword.reset.success:\n      return {\n        status: true,\n        payload: actions.data\n      };\n\n    case resetPassword.reset.error:\n      return {\n        status: false,\n        payload: actions.data\n      };\n\n    default:\n      return state;\n  }\n}; //Verify Password\n\nexport const verifyPasswords = function () {\n  let state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialState;\n  let actions = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (actions.type) {\n    case verifyPassword.verify.success:\n      return {\n        status: true,\n        payload: actions.data\n      };\n\n    case verifyPassword.verify.error:\n      return {\n        status: false,\n        payload: actions.data\n      };\n\n    default:\n      return state;\n  }\n}; //Register\n\nexport const registerUser = function () {\n  let state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialState;\n  let actions = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (actions.type) {\n    case register.registerUser.success:\n      return {\n        status: true,\n        payload: actions.data\n      };\n\n    case register.registerUser.error:\n      return {\n        status: false,\n        payload: actions.data\n      };\n\n    default:\n      return state;\n  }\n}; //logout\n\nexport const logoutUser = function () {\n  let state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialState;\n  let actions = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (actions.type) {\n    case logout.logoutUser.success:\n      return {\n        status: true,\n        payload: actions.data\n      };\n\n    case logout.logoutUser.error:\n      return {\n        status: false,\n        payload: actions.data\n      };\n\n    default:\n      return state;\n  }\n}; //categories\n\nexport const getCategories = function () {\n  let state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialState;\n  let actions = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (actions.type) {\n    case categories.getCategories.success:\n      return {\n        status: true,\n        payload: actions.data\n      };\n\n    case categories.getCategories.error:\n      return {\n        status: false,\n        payload: actions.data\n      };\n\n    default:\n      return state;\n  }\n};\nexport const getCategoryProducts = function () {\n  let state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialState;\n  let actions = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (actions.type) {\n    case categoryProducts.getProducts.success:\n      return {\n        status: true,\n        payload: actions.data\n      };\n\n    case categoryProducts.getProducts.error:\n      return {\n        status: false,\n        payload: actions.data\n      };\n\n    default:\n      return state;\n  }\n};\nexport const getSingleProduct = function () {\n  let state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialState;\n  let actions = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (actions.type) {\n    case singleProduct.getSingleProduct.success:\n      return {\n        status: true,\n        payload: actions.data\n      };\n\n    case singleProduct.getSingleProduct.error:\n      return {\n        status: false,\n        payload: actions.data\n      };\n\n    default:\n      return state;\n  }\n}; //fetch Products\n\nexport const getProducts = function () {\n  let state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialState;\n  let actions = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (actions.type) {\n    case products.getProducts.success:\n      return {\n        status: true,\n        payload: actions.data\n      };\n\n    case products.getProducts.error:\n      return {\n        status: false,\n        payload: actions.data\n      };\n\n    default:\n      return state;\n  }\n}; //get Related products\n\nexport const getRelatedProducts = function () {\n  let state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialState;\n  let actions = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (actions.type) {\n    case relatedProducts.rProducts.success:\n      return {\n        status: true,\n        payload: actions.data\n      };\n\n    case relatedProducts.rProducts.error:\n      return {\n        status: false,\n        payload: actions.data\n      };\n\n    default:\n      return state;\n  }\n}; //Wishlist\n\nexport const getWishLists = function () {\n  let state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialState;\n  let actions = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (actions.type) {\n    case getWishList.getList.success:\n      return {\n        status: true,\n        payload: actions.data\n      };\n\n    case getWishList.getList.error:\n      return {\n        status: false,\n        payload: actions.data\n      };\n\n    default:\n      return state;\n  }\n};\nexport const addWishLists = function () {\n  let state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialState;\n  let actions = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (actions.type) {\n    case addWishList.wishList.success:\n      return {\n        status: true,\n        payload: actions.data\n      };\n\n    case addWishList.wishList.error:\n      return {\n        status: false,\n        payload: actions.data\n      };\n\n    default:\n      return state;\n  }\n}; // Cart\n\nexport const addCarts = function () {\n  let state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialState;\n  let actions = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (actions.type) {\n    case addCart.add.success:\n      // console.log(\"response\",actions)\n      return {\n        status: true,\n        payload: actions.data\n      };\n\n    case addCart.add.error:\n      return {\n        status: false,\n        payload: actions.data\n      };\n\n    default:\n      return state;\n  }\n};\nexport const getCarts = function () {\n  let state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialState;\n  let actions = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (actions.type) {\n    case getCart.getCarts.success:\n      return {\n        status: true,\n        payload: actions.data\n      };\n\n    case getCart.getCarts.error:\n      return {\n        status: false,\n        payload: actions.data\n      };\n\n    default:\n      return state;\n  }\n};\nexport const getCartCounts = function () {\n  let state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialState;\n  let actions = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (actions.type) {\n    case getCartCount.getCount.success:\n      return {\n        status: true,\n        payload: actions.data\n      };\n\n    case getCartCount.getCount.error:\n      return {\n        status: false,\n        payload: actions.data\n      };\n\n    default:\n      return state;\n  }\n};\nexport const updateCarts = function () {\n  let state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialState;\n  let actions = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (actions.type) {\n    case updateCart.update.success:\n      return {\n        status: true,\n        payload: actions.data\n      };\n\n    case updateCart.update.error:\n      return {\n        status: false,\n        payload: actions.data\n      };\n\n    default:\n      return state;\n  }\n};\nexport const removeCarts = function () {\n  let state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialState;\n  let actions = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (actions.type) {\n    case removeCart.remove.success:\n      return {\n        status: true,\n        payload: actions.data\n      };\n\n    case removeCart.remove.error:\n      return {\n        status: false,\n        payload: actions.data\n      };\n\n    default:\n      return state;\n  }\n}; //Product Specifications\n\nexport const productSpecifications = function () {\n  let state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialState;\n  let actions = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (actions.type) {\n    case productSpecification.specifications.success:\n      return {\n        status: true,\n        payload: actions.data\n      };\n\n    case productSpecification.specifications.error:\n      return {\n        status: false,\n        payload: actions.data\n      };\n\n    default:\n      return state;\n  }\n}; //search\n\nexport const searchs = function () {\n  let state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialState;\n  let actions = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (actions.type) {\n    case searchProduct.search.success:\n      return {\n        status: true,\n        payload: actions.data\n      };\n\n    case searchProduct.search.error:\n      return {\n        status: false,\n        payload: actions.data\n      };\n\n    default:\n      return state;\n  }\n}; //Hot deals\n\nexport const hotDeals = function () {\n  let state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialState;\n  let actions = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (actions.type) {\n    case hotDeal.hot.success:\n      return {\n        status: true,\n        payload: actions.data\n      };\n\n    case hotDeal.hot.error:\n      return {\n        status: false,\n        payload: actions.data\n      };\n\n    default:\n      return state;\n  }\n};\nexport const buyNows = function () {\n  let state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialState;\n  let actions = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (actions.type) {\n    case buyNow.buy.success:\n      return {\n        status: true,\n        payload: state\n      };\n\n    case buyNow.buy.error:\n      return {\n        status: false,\n        payload: typeof actions.data === String\n      };\n\n    default:\n      return state;\n  }\n}; //Banner start\n\nexport const getBanner = function () {\n  let state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialState;\n  let actions = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (actions.type) {\n    case banner.getBanner.success:\n      return {\n        status: true,\n        payload: actions.data\n      };\n\n    case banner.getBanner.error:\n      return {\n        status: false,\n        payload: actions.data\n      };\n\n    default:\n      return state;\n  }\n}; //Getprofile\n\nexport const getProfiles = function () {\n  let state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialState;\n  let actions = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (actions.type) {\n    case getProfile.get.success:\n      return {\n        status: true,\n        payload: actions.data\n      };\n\n    case getProfile.get.error:\n      return {\n        status: false,\n        payload: actions.data\n      };\n\n    default:\n      return state;\n  }\n}; //Getprofile\n\nexport const updateProfiles = function () {\n  let state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialState;\n  let actions = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (actions.type) {\n    case updateProfile.update.success:\n      return {\n        status: true,\n        payload: actions.data\n      };\n\n    case updateProfile.update.error:\n      return {\n        status: false,\n        payload: actions.data\n      };\n\n    default:\n      return state;\n  }\n}; //addAddres\n\nexport const addUserAddress = function () {\n  let state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialState;\n  let actions = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (actions.type) {\n    case addAddress.add.success:\n      return {\n        status: true,\n        payload: actions.data\n      };\n\n    case addAddress.add.error:\n      return {\n        status: false,\n        payload: actions.data\n      };\n\n    default:\n      return state;\n  }\n}; //getAddres\n\nexport const deleteUserAddress = function () {\n  let state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialState;\n  let actions = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (actions.type) {\n    case deleteAddresss.delete.success:\n      return {\n        status: true,\n        payload: actions.data\n      };\n\n    case deleteAddresss.delete.error:\n      return {\n        status: false,\n        payload: actions.data\n      };\n\n    default:\n      return state;\n  }\n}; //delAddres\n\nexport const getUserAddress = function () {\n  let state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialState;\n  let actions = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (actions.type) {\n    case getAddress.get.success:\n      return {\n        status: true,\n        payload: actions.data\n      };\n\n    case getAddress.get.error:\n      return {\n        status: false,\n        payload: actions.data\n      };\n\n    default:\n      return state;\n  }\n}; //orders\n\nexport const getOrders = function () {\n  let state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialState;\n  let actions = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (actions.type) {\n    case getOrder.get.success:\n      return {\n        status: true,\n        payload: actions.data\n      };\n\n    case getOrder.get.error:\n      return {\n        status: false,\n        payload: actions.data\n      };\n\n    default:\n      return state;\n  }\n}; //ordersdetails\n\nexport const getOrdersDetails = function () {\n  let state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialState;\n  let actions = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (actions.type) {\n    case getOrderDetail.details.success:\n      return {\n        status: true,\n        payload: actions.data\n      };\n\n    case getOrderDetail.details.error:\n      return {\n        status: false,\n        payload: actions.data\n      };\n\n    default:\n      return state;\n  }\n}; //addReviews\n\nexport const addReviews = function () {\n  let state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialState;\n  let actions = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (actions.type) {\n    case addReview.add.success:\n      return {\n        status: true,\n        payload: actions.data\n      };\n\n    case addReview.add.error:\n      return {\n        status: false,\n        payload: actions.data\n      };\n\n    default:\n      return state;\n  }\n}; //myreviews\n\nexport const myReviews = function () {\n  let state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialState;\n  let actions = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (actions.type) {\n    case myReview.review.success:\n      return {\n        status: true,\n        payload: actions.data\n      };\n\n    case myReview.review.error:\n      return {\n        status: false,\n        payload: actions.data\n      };\n\n    default:\n      return state;\n  }\n}; //deletereviews\n\nexport const deleteReviews = function () {\n  let state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialState;\n  let actions = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (actions.type) {\n    case deleteReview.delete.success:\n      return {\n        status: true,\n        payload: actions.data\n      };\n\n    case deleteReview.delete.error:\n      return {\n        status: false,\n        payload: actions.data\n      };\n\n    default:\n      return state;\n  }\n}; //getReviews\n\nexport const getReviews = function () {\n  let state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialState;\n  let actions = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (actions.type) {\n    case getReview.get.success:\n      return {\n        status: true,\n        payload: actions.data\n      };\n\n    case getReview.get.error:\n      return {\n        status: false,\n        payload: actions.data\n      };\n\n    default:\n      return state;\n  }\n}; //checkout\n\nexport const checkouts = function () {\n  let state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialState;\n  let actions = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (actions.type) {\n    case checkOut.check.success:\n      return {\n        status: true,\n        payload: actions.data\n      };\n\n    case checkOut.check.error:\n      return {\n        status: false,\n        payload: actions.data\n      };\n\n    default:\n      return state;\n  }\n}; //PayNows\n\nexport const payNows = function () {\n  let state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialState;\n  let actions = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (actions.type) {\n    case payNow.pay.success:\n      return {\n        status: true,\n        payload: actions.data\n      };\n\n    case payNow.pay.error:\n      return {\n        status: false,\n        payload: actions.data\n      };\n\n    default:\n      return state;\n  }\n}; //faqs\n\nexport const faqs = function () {\n  let state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialState;\n  let actions = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (actions.type) {\n    case faq.quest.success:\n      return {\n        status: true,\n        payload: actions.data\n      };\n\n    case faq.quest.error:\n      return {\n        status: false,\n        payload: actions.data\n      };\n\n    default:\n      return state;\n  }\n};\n\nvar _c;\n\n$RefreshReg$(_c, \"User\");","map":{"version":3,"names":["authenticate","logout","register","resetPassword","verifyPassword","categories","categoryProducts","singleProduct","products","relatedProducts","addCart","getCart","getCartCount","updateCart","removeCart","getWishList","addWishList","productSpecification","searchProduct","hotDeal","buyNow","banner","getProfile","updateProfile","addAddress","deleteAddresss","getAddress","getOrder","getOrderDetail","addReview","deleteReview","myReview","getReview","checkOut","payNow","faq","initialState","User","state","actions","type","login","success","status","payload","data","error","resetPasswords","reset","verifyPasswords","verify","registerUser","logoutUser","getCategories","getCategoryProducts","getProducts","getSingleProduct","getRelatedProducts","rProducts","getWishLists","getList","addWishLists","wishList","addCarts","add","getCarts","getCartCounts","getCount","updateCarts","update","removeCarts","remove","productSpecifications","specifications","searchs","search","hotDeals","hot","buyNows","buy","String","getBanner","getProfiles","get","updateProfiles","addUserAddress","deleteUserAddress","delete","getUserAddress","getOrders","getOrdersDetails","details","addReviews","myReviews","review","deleteReviews","getReviews","checkouts","check","payNows","pay","faqs","quest"],"sources":["/Users/mini2/devlopment/Afridi/Beddwell NEW/src/Redux/Reducers/Reducer.js"],"sourcesContent":["import {\n  authenticate,\n  logout,\n  register,\n  resetPassword,\n  verifyPassword,\n   categories,\n   categoryProducts,\n   singleProduct,\n   products,\n   relatedProducts,\n   addCart,\n   getCart,\n   getCartCount,\n   updateCart,\n   removeCart,\n   getWishList,\n   addWishList,\n   productSpecification,\n   searchProduct,\n   hotDeal,\n   buyNow,\n   banner,\n   getProfile,\n   updateProfile,\n   addAddress,\n   deleteAddresss,\n   getAddress,\n   getOrder,\n   getOrderDetail,\n   addReview,\n   deleteReview,\n   myReview,\n   getReview,\n   checkOut,\n   payNow,\n   faq\n   } \n   from \"../ActionType\";\n\nconst initialState = {};\n\n//User\nexport const User = (state = initialState, actions) => {\n  switch (actions.type) {\n    case authenticate.login.success:\n      return {\n        status: true,\n        payload: actions.data,\n      };\n    case authenticate.login.error:\n      return {\n        status: false,\n        payload: actions.data,\n      };\n    default:\n      return state;\n  }\n};\n//Reset Password\nexport const resetPasswords = (state = initialState, actions) => {\n  switch (actions.type) {\n    case resetPassword.reset.success:\n      return {\n        status: true,\n        payload: actions.data,\n      };\n    case resetPassword.reset.error:\n      return {\n        status: false,\n        payload: actions.data,\n      };\n    default:\n      return state;\n  }\n};\n//Verify Password\nexport const verifyPasswords = (state = initialState, actions) => {\n  switch (actions.type) {\n    case verifyPassword.verify.success:\n      return {\n        status: true,\n        payload: actions.data,\n      };\n    case verifyPassword.verify.error:\n      return {\n        status: false,\n        payload: actions.data,\n      };\n    default:\n      return state;\n  }\n};\n\n\n//Register\nexport const registerUser = (state = initialState, actions) => {\n  switch (actions.type) {\n    case register.registerUser.success:\n      return {\n        status: true,\n        payload: actions.data,\n      };\n    case register.registerUser.error:\n      return {\n        status: false,\n        payload: actions.data,\n      };\n    default:\n      return state;\n  }\n};\n\n//logout\nexport const logoutUser = (state = initialState, actions) => {\n  switch (actions.type) {\n    case logout.logoutUser.success:\n      return {\n        status: true,\n        payload: actions.data,\n      };\n    case logout.logoutUser.error:\n      return {\n        status: false,\n        payload: actions.data,\n      };\n    default:\n      return state;\n  }\n};\n\n//categories\nexport const getCategories =(state =initialState,actions)=>{\n\n    switch(actions.type){\n        case categories.getCategories.success:\n            return{\n                status:true,\n                payload:actions.data,\n            };\n        case categories.getCategories.error:\n            return{\n                status:false,\n                payload:actions.data,\n            };\n        default:\n            return state;\n    }\n\n}\n\nexport const getCategoryProducts = (state = initialState, actions) => {\n    switch (actions.type) {\n      case categoryProducts.getProducts.success:\n        return {\n          status: true,\n          payload: actions.data,\n        };\n      case categoryProducts.getProducts.error:\n        return {\n          status: false,\n          payload: actions.data,\n        };\n      default:\n        return state;\n    }\n  };\n\n  export const getSingleProduct = (state = initialState, actions) => {\n    switch (actions.type) {\n      case singleProduct.getSingleProduct.success:\n        return {\n          status: true,\n          payload: actions.data,\n        };\n      case singleProduct.getSingleProduct.error:\n        return {\n          status: false,\n          payload: actions.data,\n        };\n      default:\n        return state;\n    }\n  };\n\n//fetch Products\n\nexport const getProducts = (state = initialState, actions) => {\n  switch (actions.type) {\n    case products.getProducts.success:\n      return {\n        status: true,\n        payload: actions.data,\n      };\n    case products.getProducts.error:\n      return {\n        status: false,\n        payload: actions.data,\n      };\n    default:\n      return state;\n  }\n};\n\n//get Related products\n\nexport const getRelatedProducts = (state = initialState, actions) => {\n  switch (actions.type) {\n    case relatedProducts.rProducts.success:\n      return {\n        status: true,\n        payload: actions.data,\n      };\n    case relatedProducts.rProducts.error:\n      return {\n        status: false,\n        payload: actions.data,\n      };\n    default:\n      return state;\n  }\n};\n\n//Wishlist\nexport const getWishLists = (state = initialState, actions) => {\n  switch (actions.type) {\n    case getWishList.getList.success:\n      return {\n        status: true,\n        payload: actions.data,\n      };\n    case getWishList.getList.error:\n      return {\n        status: false,\n        payload: actions.data,\n      };\n    default:\n      return state;\n  }\n};\n\n\nexport const addWishLists = (state = initialState, actions) => {\n  switch (actions.type) {\n    case addWishList.wishList.success:\n      return {\n        status: true,\n        payload: actions.data,\n      };\n    case addWishList.wishList.error:\n      return {\n        status: false,\n        payload: actions.data,\n      };\n    default:\n      return state;\n  }\n};\n\n// Cart\nexport const addCarts = (state = initialState, actions) => {\n  switch (actions.type) {\n    case addCart.add.success:\n      // console.log(\"response\",actions)\n      return {\n        status: true,\n        payload: actions.data,\n      };\n    case addCart.add.error:\n      return {\n        status: false,\n        payload: actions.data,\n      };\n    default:\n      return state;\n  }\n};\n\nexport const getCarts = (state = initialState, actions) => {\n  switch (actions.type) {\n    case getCart.getCarts.success:\n      return {\n        status: true,\n        payload: actions.data,\n      };\n    case getCart.getCarts.error:\n      return {\n        status: false,\n        payload: actions.data,\n      };\n    default:\n      return state;\n  }\n};\n\nexport const getCartCounts = (state = initialState, actions) => {\n  switch (actions.type) {\n    case getCartCount.getCount.success:\n      return {\n        status: true,\n        payload: actions.data,\n      };\n    case getCartCount.getCount.error:\n      return {\n        status: false,\n        payload: actions.data,\n      };\n    default:\n      return state;\n  }\n};\n\nexport const updateCarts = (state = initialState, actions) => {\n  switch (actions.type) {\n    case updateCart.update.success:\n      return {\n        status: true,\n        payload: actions.data,\n      };\n    case updateCart.update.error:\n      return {\n        status: false,\n        payload: actions.data,\n      };\n    default:\n      return state;\n  }\n};\n\nexport const removeCarts = (state = initialState, actions) => {\n  switch (actions.type) {\n    case removeCart.remove.success:\n      return {\n        status: true,\n        payload: actions.data,\n      };\n    case removeCart.remove.error:\n      return {\n        status: false,\n        payload: actions.data,\n      };\n    default:\n      return state;\n  }\n};\n\n//Product Specifications\n\nexport const productSpecifications=(state=initialState,actions)=>{\n    switch(actions.type){\n      case productSpecification.specifications.success:\n      return{\n        status:true,\n        payload:actions.data,\n\n      };\n      case productSpecification.specifications.error:\n      return{\n        status:false,\n        payload:actions.data,\n\n      };\n      default:\n        return state;\n    }\n}\n\n//search\nexport const searchs = (state = initialState, actions) => {\n  switch (actions.type) {\n    case searchProduct.search.success:\n      return {\n        status: true,\n        payload: actions.data,\n      };\n    case searchProduct.search.error:\n      return {\n        status: false,\n        payload: actions.data,\n      };\n    default:\n      return state;\n  }\n};\n\n\n//Hot deals\nexport const hotDeals = (state = initialState, actions) => {\n  switch (actions.type) {\n    case hotDeal.hot.success:\n      return {\n        status: true,\n        payload: actions.data,\n      };\n    case hotDeal.hot.error:\n      return {\n        status: false,\n        payload: actions.data,\n      };\n    default:\n      return state;\n  }\n};\n\nexport const buyNows = (state = initialState, actions) => {\n  switch (actions.type) {\n    case buyNow.buy.success:\n      return {\n        status: true,\n        payload: state,\n      };\n    case buyNow.buy.error:\n      return {\n        status: false,\n        payload: typeof actions.data === String,\n      };\n    default:\n      return state;\n  }\n};\n\n//Banner start\nexport const getBanner = (state = initialState, actions) => {\n  switch (actions.type) {\n    case banner.getBanner.success:\n      return {\n        status: true,\n        payload: actions.data,\n      };\n    case banner.getBanner.error:\n      return {\n        status: false,\n        payload: actions.data,\n      };\n    default:\n      return state;\n  }\n};\n\n//Getprofile\nexport const getProfiles = (state = initialState, actions) => {\n  switch (actions.type) {\n    case getProfile.get.success:\n      return {\n        status: true,\n        payload: actions.data,\n      };\n    case getProfile.get.error:\n      return {\n        status: false,\n        payload: actions.data,\n      };\n    default:\n      return state;\n  }\n};\n//Getprofile\nexport const updateProfiles = (state = initialState, actions) => {\n  switch (actions.type) {\n    case updateProfile.update.success:\n      return {\n        status: true,\n        payload: actions.data,\n      };\n    case updateProfile.update.error:\n      return {\n        status: false,\n        payload: actions.data,\n      };\n    default:\n      return state;\n  }\n};\n\n//addAddres\nexport const addUserAddress = (state = initialState, actions) => {\n  switch (actions.type) {\n    case addAddress.add.success:\n      return {\n        status: true,\n        payload: actions.data,\n      };\n    case addAddress.add.error:\n      return {\n        status: false,\n        payload: actions.data,\n      };\n    default:\n      return state;\n  }\n};\n//getAddres\nexport const deleteUserAddress = (state = initialState, actions) => {\n  switch (actions.type) {\n    case deleteAddresss.delete.success:\n      return {\n        status: true,\n        payload: actions.data,\n      };\n    case deleteAddresss.delete.error:\n      return {\n        status: false,\n        payload: actions.data,\n      };\n    default:\n      return state;\n  }\n};\n//delAddres\nexport const getUserAddress = (state = initialState, actions) => {\n  switch (actions.type) {\n    case getAddress.get.success:\n      return {\n        status: true,\n        payload: actions.data,\n      };\n    case getAddress.get.error:\n      return {\n        status: false,\n        payload: actions.data,\n      };\n    default:\n      return state;\n  }\n};\n\n//orders\nexport const getOrders = (state = initialState, actions) => {\n  switch (actions.type) {\n    case getOrder.get.success:\n      return {\n        status: true,\n        payload: actions.data,\n      };\n    case getOrder.get.error:\n      return {\n        status: false,\n        payload: actions.data,\n      };\n    default:\n      return state;\n  }\n};\n//ordersdetails\nexport const getOrdersDetails = (state = initialState, actions) => {\n  switch (actions.type) {\n    case getOrderDetail.details.success:\n      return {\n        status: true,\n        payload: actions.data,\n      };\n    case getOrderDetail.details.error:\n      return {\n        status: false,\n        payload: actions.data,\n      };\n    default:\n      return state;\n  }\n};\n\n//addReviews\nexport const addReviews = (state = initialState, actions) => {\n  switch (actions.type) {\n    case addReview.add.success:\n      return {\n        status: true,\n        payload: actions.data,\n      };\n    case addReview.add.error:\n      return {\n        status: false,\n        payload: actions.data,\n      };\n    default:\n      return state;\n  }\n};\n\n//myreviews\nexport const myReviews = (state = initialState, actions) => {\n  switch (actions.type) {\n    case myReview.review.success:\n      return {\n        status: true,\n        payload: actions.data,\n      };\n    case myReview.review.error:\n      return {\n        status: false,\n        payload: actions.data,\n      };\n    default:\n      return state;\n  }\n};\n//deletereviews\nexport const deleteReviews = (state = initialState, actions) => {\n  switch (actions.type) {\n    case deleteReview.delete.success:\n      return {\n        status: true,\n        payload: actions.data,\n      };\n    case deleteReview.delete.error:\n      return {\n        status: false,\n        payload: actions.data,\n      };\n    default:\n      return state;\n  }\n};\n\n//getReviews\nexport const getReviews = (state = initialState, actions) => {\n  switch (actions.type) {\n    case getReview.get.success:\n      return {\n        status: true,\n        payload: actions.data,\n      };\n    case getReview.get.error:\n      return {\n        status: false,\n        payload: actions.data,\n      };\n    default:\n      return state;\n  }\n};\n\n//checkout\nexport const checkouts = (state = initialState, actions) => {\n  switch (actions.type) {\n    case checkOut.check.success:\n      return {\n        status: true,\n        payload: actions.data,\n      };\n    case checkOut.check.error:\n      return {\n        status: false,\n        payload: actions.data,\n      };\n    default:\n      return state;\n  }\n};\n//PayNows\nexport const payNows = (state = initialState, actions) => {\n  switch (actions.type) {\n    case payNow.pay.success:\n      return {\n        status: true,\n        payload: actions.data,\n      };\n    case payNow.pay.error:\n      return {\n        status: false,\n        payload: actions.data,\n      };\n    default:\n      return state;\n  }\n};\n\n//faqs\nexport const faqs = (state = initialState, actions) => {\n  switch (actions.type) {\n    case faq.quest.success:\n      return {\n        status: true,\n        payload: actions.data,\n      };\n    case faq.quest.error:\n      return {\n        status: false,\n        payload: actions.data,\n      };\n    default:\n      return state;\n  }\n};"],"mappings":"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"},"metadata":{},"sourceType":"module"}